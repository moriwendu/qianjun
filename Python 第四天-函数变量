全局变量及局部变量：

    #定义一个全局变量，webdu
    wendu = 0
    def get_wendu():
        #定义一个局部变量
        #wendu = 33

        #如果想把函数内的局部变量定义为全局变量，得首先声明变量是全局变量，然后再进行修改
        global wendu
        wendu = 33

    def print_wendu():
        print("温度：%d"%wendu)

    get_wendu()
    print_wendu()
    
    
函数内清加注释供查询
    
    def chkce():
        """这只是一个用来做示例的"""
        print("例子")
    help(chkce)
        #运行上面帮助后，会把6个双引号括起来的一行话显示出来

函数中的缺省参数（及默认参数） 参数是依次从前向后传
    
    def sum(a,b=33,c=11):
        abc = a+b+c
        print("相加的和是：%d"%abc)
    sum(11,22,33)
    sum(32,23)
    sum(1)

函数中定义命名参数
    
    def sum(a,d,b=22,c=33)  #在这里定义的为a,d 为必需要传的参数 b,c为缺省参数
        print(a)
        print(b)
        print(c)
        print(d)
    test(d=11,a=22,c=44)    #在实参里定义的叫命令参数，命令参数必须对应函数里的形参匹配，如果不匹配就会报错    

函数中定义不定长参数
    def sum_2_nums(a,b,*args,**kwargs): #*args 可以是其它任何自己命名的名称  一个* 表示是元组列出后面的不定长参数 两个**表示是以字典的形式进行形参的传递
        print("-"*30)
        print(a)
        print(b)
        print(args)

        result = a+b
        for num in args:
            result+=num
        print("result=%d"%result)

    sum_2_nums(11,22,33,44,55,66,77)
    sum_2_nums(11,22,33)
    sum_2_nums(11,22)
    #sum_2_nums(11)#错误,因为形参中定义了a,b必须要实参输送两个实参
    sum_2_nums(11,22,33,44,55,name=laowang,age=18)
    
    def sum_nums(a,b,*args)         #后面的参数给定相加
        result = a+b
        for num in args:
            result += num
        print(result)  
    sum_nums(11,22,33,44,55,66,77,88)    

函数的拆包，元组、字典
    def test(a,b,c=33,*args,**kwargs):
        print(a)
        print(b)
        print(c)
        print(args)
        print(kwargs)
    A = (44,55,66)
    B = {"name":"laoli","age":18}
    test(11,22,33,*A,**B)     #实参加*   一个代表传的为元组，两个代表传字典
        



















